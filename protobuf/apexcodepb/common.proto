syntax = "proto3";

package scalebase;

option java_package = "com.thealp.protobuf";
// import "scalapb/scalapb.proto";
// import "google/protobuf/wrappers.proto";

/*
 * Nullableな文字列型
 */
message NullableString {
    bool is_valid = 1;
    string value = 2;
}

/*
 * 住所
 */
message Address {
    string id = 1;
    string zip_code = 2; // 郵便番号
    CountryEnum country = 3; // 国
    JapanPrefectureEnum prefecture = 4; // 都道府県
    string city = 5; // 市区郡
    string address_line1 = 6; // 町名・番地1
    string address_line2 = 7; // 町名・番地2
}

/*
国
*/
enum CountryEnum {
    COUNTRY_NONE = 0;
    COUNTRY_JP = 1;
}

/*
県
*/
enum JapanPrefectureEnum {
    JAPAN_PREFECTURE_NONE = 0;

    JAPAN_PREFECTURE_HOKKAIDO = 1;

    JAPAN_PREFECTURE_AOMORI = 2;
    JAPAN_PREFECTURE_IWATE = 3;
    JAPAN_PREFECTURE_MIYAGI = 4;
    JAPAN_PREFECTURE_AKITA = 5;
    JAPAN_PREFECTURE_YAMAGATA = 6;
    JAPAN_PREFECTURE_FUKUSHIMA = 7;

    JAPAN_PREFECTURE_IBARAKI = 8;
    JAPAN_PREFECTURE_TOCHIGI = 9;
    JAPAN_PREFECTURE_GUNMA = 10;
    JAPAN_PREFECTURE_SAITAMA = 11;
    JAPAN_PREFECTURE_CHIBA = 12;
    JAPAN_PREFECTURE_TOKYO = 13;
    JAPAN_PREFECTURE_KANAGAWA = 14;

    JAPAN_PREFECTURE_NIIGATA = 15;
    JAPAN_PREFECTURE_TOYAMA = 16;
    JAPAN_PREFECTURE_ISHIKAWA = 17;
    JAPAN_PREFECTURE_FUKUI = 18;
    JAPAN_PREFECTURE_YAMANASHI = 19;
    JAPAN_PREFECTURE_NAGANO = 20;
    JAPAN_PREFECTURE_GIFU = 21;
    JAPAN_PREFECTURE_SHIZUOKA = 22;
    JAPAN_PREFECTURE_AICHI = 23;

    JAPAN_PREFECTURE_MIE = 24;
    JAPAN_PREFECTURE_SHIGA = 25;
    JAPAN_PREFECTURE_KYOTO = 26;
    JAPAN_PREFECTURE_OSAKA = 27;
    JAPAN_PREFECTURE_HYOGO = 28;
    JAPAN_PREFECTURE_NARA = 29;
    JAPAN_PREFECTURE_WAKAYAMA = 30;

    JAPAN_PREFECTURE_TOTTORI = 31;
    JAPAN_PREFECTURE_SHIMANE = 32;
    JAPAN_PREFECTURE_OKAYAMA = 33;
    JAPAN_PREFECTURE_HIROSHIMA = 34;
    JAPAN_PREFECTURE_YAMAGUCHI = 35;

    JAPAN_PREFECTURE_TOKUSHIMA = 36;
    JAPAN_PREFECTURE_KAGAWA = 37;
    JAPAN_PREFECTURE_EHIME = 38;
    JAPAN_PREFECTURE_KOCHI = 39;

    JAPAN_PREFECTURE_FUKUOKA = 40;
    JAPAN_PREFECTURE_SAGA = 41;
    JAPAN_PREFECTURE_NAGASAKI = 42;
    JAPAN_PREFECTURE_KUMAMOTO = 43;
    JAPAN_PREFECTURE_OITA = 44;
    JAPAN_PREFECTURE_MIYAZAKI = 45;
    JAPAN_PREFECTURE_KAGOSHIMA = 46;
    JAPAN_PREFECTURE_OKINAWA = 47;
}

/*
日型
*/
enum DayOfMonthEnum {
    DAY_NONE = 0;
    DAY1 = 1; // 1日
    DAY2 = 2; // 2日
    DAY3 = 3; // 3日
    DAY4 = 4; // 4日
    DAY5 = 5; // 5日
    DAY6 = 6; // 6日
    DAY7 = 7; // 7日
    DAY8 = 8; // 8日
    DAY9 = 9; // 9日
    DAY10 = 10; // 10日
    DAY11 = 11; // 11日
    DAY12 = 12; // 12日
    DAY13 = 13; // 13日
    DAY14 = 14; // 14日
    DAY15 = 15; // 15日
    DAY16 = 16; // 16日
    DAY17 = 17; // 17日
    DAY18 = 18; // 18日
    DAY19 = 19; // 19日
    DAY20 = 20; // 20日
    DAY21 = 21; // 21日
    DAY22 = 22; // 22日
    DAY23 = 23; // 23日
    DAY24 = 24; // 24日
    DAY25 = 25; // 25日
    DAY26 = 26; // 26日
    DAY27 = 27; // 27日
    DAY28 = 28; // 28日
    DAY29 = 29; // 29日
    DAY30 = 30; // 30日
    DAY31 = 31; // 31日
    END_OF_MONTH = 32; // 末日
}

/*
月型
*/
enum MonthOfYearEnum {
    MONTH_NONE = 0;
    MONTH1 = 1; // 1月
    MONTH2 = 2; // 2月
    MONTH3 = 3; // 3月
    MONTH4 = 4; // 4月
    MONTH5 = 5; // 5月
    MONTH6 = 6; // 6月
    MONTH7 = 7; // 7月
    MONTH8 = 8; // 8月
    MONTH9 = 9; // 9月
    MONTH10 = 10; // 10月
    MONTH11 = 11; // 11月
    MONTH12 = 12; // 12月
    END_OF_YEAR = 13; // 師走
}

/*
日付型
*/
message Date {
    int32 year = 1; // 年
    MonthOfYearEnum month = 2; // 月
    DayOfMonthEnum day = 3; // 日
}

/*
Nullable日付型
*/
message NullableDate {
    // option (scalapb.message).extends = "com.thealp.paripi.subscriptionApi.adapter.primary.akkaHttp.common.protoUtil.Nullable[Date]";
    bool is_valid = 1;
    Date value = 2;
}

/*
利用期間型
*/
message AvailabilityTerm {
    Date start_at = 1;
    Date end_at = 2;
}

// 振込先情報
message BankAccount {
    string bank_name = 1; // 銀行名
    string branch_name = 2; // 支店名
    string branch_number = 3; // 支店番号
    AccountType account_type = 4; // 銀行口座種別
    string account_number = 5; // 口座番号
    string account_name = 6; // 口座名義
    string recipient_name = 7; //受取人名
}

// 銀行口座種別
enum AccountType {
    BANK_ACCOUNT_TYPE_NONE = 0;
    BANK_ACCOUNT_TYPE_SAVING = 1; // 普通預金口座
    BANK_ACCOUNT_TYPE_CHECKING = 2; // 当座預金口座
}

// 税率型
enum VatRate {
    VAT_RATE_NONE = 0;
    VAT_RATE_FREE = 1; // 0%
    VAT_RATE_EIGHT = 2; // 8%
    VAT_RATE_TEN = 3; // 10%
}
